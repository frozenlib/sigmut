name: Rust

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  build:
    name: Build and run tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}-3
          restore-keys: ${{ runner.os }}-cargo-registry

      - name: Cache cargo index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}-3
          restore-keys: ${{ runner.os }}-cargo-index

      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-build-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-build-target-build

      - name: Build
        run: cargo build --verbose --all-features

      - name: Run tests
        run: cargo test --verbose --all-features

  benchmark:
    name: Performance regression check
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: rustup toolchain update nightly && rustup default nightly

      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}-3
          restore-keys: ${{ runner.os }}-cargo-registry

      - name: Cache cargo index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}-3
          restore-keys: ${{ runner.os }}-cargo-index

      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-benchmark-${{ hashFiles('**/Cargo.lock') }}-${{ matrix.features }}-3
          restore-keys: |
            ${{ runner.os }}-cargo-build-target-benchmark-${{ hashFiles('**/Cargo.lock') }}
            ${{ runner.os }}-cargo-build-target-build-${{ hashFiles('**/Cargo.lock') }}
            ${{ runner.os }}-cargo-build-target-build

      - name: Run benchmark
        run: cargo +nightly bench | tee output.txt

      - name: Update benchmark result
        run: git fetch 'https://frozenlib:${{ secrets.GITHUB_TOKEN }}@github.com/frozenlib/reactive-fn.git' gh-pages:gh-pages

      - name: Store benchmark result
        uses: rhysd/github-action-benchmark@v1
        with:
          name: My Project Rust Benchmark
          tool: "cargo"
          auto-push: false
          skip-fetch-gh-pages: false
          output-file-path: output.txt

      - name: Push benchmark result
        run: git push 'https://frozenlib:${{ secrets.GITHUB_TOKEN }}@github.com/frozenlib/reactive-fn.git' gh-pages:gh-pages

  build-features:
    name: Build each features
    needs: build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        features:
          - --features smol
          - --features tokio
          - --features async-std
          -
    steps:
      - uses: actions/checkout@v2

      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: ${{ runner.os }}-cargo-registry-${{ hashFiles('**/Cargo.lock') }}-3
          restore-keys: ${{ runner.os }}-cargo-registry

      - name: Cache cargo index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: ${{ runner.os }}-cargo-index-${{ hashFiles('**/Cargo.lock') }}-3
          restore-keys: ${{ runner.os }}-cargo-index

      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: ${{ runner.os }}-cargo-build-target-bf-${{ hashFiles('**/Cargo.lock') }}-${{ matrix.features }}-3
          restore-keys: |
            ${{ runner.os }}-cargo-build-target-bf-${{ hashFiles('**/Cargo.lock') }}
            ${{ runner.os }}-cargo-build-target-build-${{ hashFiles('**/Cargo.lock') }}
            ${{ runner.os }}-cargo-build-target-build

      - name: Build lib
        run: cargo build --verbose ${{ matrix.features }}

      - name: Build tests
        run: cargo test --verbose ${{ matrix.features }} --no-run
